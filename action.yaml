name: SemVer Release Version
description: Utilized for creating releases of projects

# Inputs
inputs:
  nexus_repo_id:
    description: "Nexus Repository ID" 
    required: false
    default: "maven-snapshots"
  nexus_repo_username:
    description: "Nexus Repository Username" 
    required: false 
    default: "admin"
  is_tag:
    description: "Check if running on tag"
    required: false
    default: 'false'
  nexus_repo_password:
    description: "Nexus Repository Password"  
    required: true
  nexus_repo_url:
    description: "Nexus Repository URL"
    required: false 
    default: "https://nexus.tinkarbuild.com" 
  github_token:
    description: "GitHub Token"
    required: true
  gpg_passphrase:
    description: "GPG Passphrase"
    required: true
  gpg_key:
    description: "GPG Key"
    required: true
  ossrh_username:
    description: "OSSRH USERNAME"
    required: true
  ossrh_token:
    description: "OSSRH Token"
    required: true
  repo_name: 
    description: "Repo Name"
    required: true
  branch_name: 
    description: "Branch Name" 
    required: true 
  ikmdevops_pat:
    description: "PAT TOKEN for IKMDevops User"
    required: true

outputs:
  release_upload_url:
    description: "Release Url"
    value: ${{ steps.create_release.outputs.upload_url }}


runs:
  using: "composite"
  steps:
     - name: Checkout Repository
       uses: actions/checkout@v4
       with:
         repository: ${{inputs.repo_name}}
         ref: ${{inputs.branch_name}}
    
     - name: Setup Java
       uses: actions/setup-java@v4
       with:
            distribution: 'zulu'
            java-version: '21'
            server-id: ossrh
            server-username: MAVEN_USERNAME
            server-password: MAVEN_CENTRAL_TOKEN
            gpg-private-key: ${{inputs.gpg_key}}
            gpg-passphrase: MAVEN_GPG_PASSPHRASE

     - name: Extract Version
       id: get_current_version
       shell: bash
       run: |
          echo "POM_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

     - name: Check if IS_SNAPSHOT
       id: is_snapshot
       shell: bash
       run: |
            if [ $IS_SNAPSHOT == 'true' ]; then
             echo "NEXUS_REPO_ID=maven-snapshots">> $GITHUB_OUTPUT
            elif [ $IS_SNAPSHOT == 'false' ]; then
             echo "NEXUS_REPO_ID=maven-releases">> $GITHUB_OUTPUT
            else
             echo "ERROR: Incorrect Type $IS_SNAPSHOT"
             exit 1
            echo "IS_SNAPSHOT_VERSION=$IS_SNAPSHOT" >> $GITHUB_OUTPUT
            fi
       env:
         IS_SNAPSHOT:  ${{ contains(steps.get_current_version.outputs.POM_VERSION, '-SNAPSHOT')}}
       

     - name: Maven Settings File
       uses: whelk-io/maven-settings-xml-action@v22
       with:
        servers: '[{"id": "${{ steps.is_snapshot.outputs.NEXUS_REPO_ID }}", "username": "${{inputs.nexus_repo_username}}", "password": "${{inputs.nexus_repo_password}}"}]'
        profiles: '[{"id": "${{inputs.nexus_profile}}", "properties": {"altDeploymentRepository": "${{  steps.is_snapshot.outputs.NEXUS_REPO_ID  }}::${{ inputs.nexus_repo_url }}/repository/${{ steps.is_snapshot.outputs.NEXUS_REPO_ID  }}"}}]'
        active_profiles: '["${{inputs.nexus_profile}}"]' 
        output_file: .m2/settings.xml

     - name: Maven Build
       shell: bash
       run: |
          ./mvnw clean install -U \
            --batch-mode \
            -e \
            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
            -Dmaven.build.cache.enabled=false \

     - name: Deploy To Nexus
       shell: bash
       if: github.event.repository.name != 'jpms-deps'
       run: |
          ./mvnw deploy \
            --batch-mode \
            -e \
            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
            -DskipTests \
            -DskipITs \
            -s '/home/runner/work/${{github.event.repository.name}}/${{github.event.repository.name}}/.m2/settings.xml'\
            -DrepositoryId='${{ steps.is_snapshot.outputs.NEXUS_REPO_ID  }}'
    
     - name: Publish To OSSRH (Maven Central Staging)
       shell: bash
       if: steps.is_snapshot.outputs.IS_SNAPSHOT_VERSION == 'false' && github.event.repository.name != 'komet_test'
       run: |
            ./mvnw deploy -U\
                  --batch-mode \
                  -e \
                  -U \
                  -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
                  -DskipTests \
                  -DskipITs \
                  -Dmaven.main.skip \
                  -Dmaven.test.skip \
                  -DrepositoryId=ossrh \
                  -DrepositoryIdOSSRH='true' \
                  -PstageOSSRH \
                  -Dmaven.build.cache.enabled=false
       env:
          MAVEN_USERNAME: ${{ inputs.ossrh_username }}
          MAVEN_CENTRAL_TOKEN: ${{ inputs.ossrh_token }}
          MAVEN_GPG_PASSPHRASE: ${{ inputs.gpg_passphrase }}

     - name: Create Release
       id: create_release
       if: steps.is_snapshot.outputs.IS_SNAPSHOT_VERSION == 'false'
       uses: comnoco/create-release-action@v2.0.5
       env:
          GITHUB_TOKEN: ${{ inputs.github_token }}
       with:
          tag_name: ${{ inputs.branch_name }}
          release_name: Release ${{ inputs.branch_name }}
          body: |
            Release ${{github.ref_name}}
          draft: false
          prerelease: false

     